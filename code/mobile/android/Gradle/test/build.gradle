/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'user' at '12/24/14 4:06 PM' with Gradle 2.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}
*/

apply plugin: "java"
apply plugin: "application"
apply plugin: "war"

version = '1.0.1'

mainClassName = "com.example.Main"

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    jcenter()
}

dependencies {
    compile "log4j:log4j:1.2.17"
}

jar {
    manifest.attributes("Main-Class": mainClassName);
}

/* OTHER */
task _wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

task _test << {
    println 'Hello world!'

    String someString = 'mY_nAmE'
    println "Original: " + someString
    println "Upper case: " + someString.toUpperCase()
    4.times { print "$it " }
    println ""

    def user = System.console().readLine("\nPlease enter your login: ")
    def password = System.console().readPassword("Please enter key passphrase: ")
    println "\nHa-ha-ha! Dear, " + user + "! Your password is \"" + password + "\". See all!!!"
}

/**
*  ~/.gradle/gradle.properties:
*  glassfishHome=/path/to/glassfish_home
*
*  or in Netbeans, right click project, Properties, Manage Build in Tasks, Run
*  Add line to Arguments: -Dorg.gradle.project.glassfishHome=/path/to/glassfish_home
*
*  For more information about Exec tasks see
*  http://www.gradle.org/docs/current/dsl/org.gradle.api.tasks.Exec.html
*/
task _run(dependsOn: 'war', type:Exec) {
  workingDir "${glassfishHome}${File.separator}bin"
 
  if (System.properties['os.name'].toLowerCase().contains('windows')) {
    commandLine 'cmd', '/c', 'asadmin.bat'
  } else {
    commandLine "./asadmin"
  }
 
  args "--user admin", "deploy", "--force=true", "${war.archivePath}"
}

task _run_start(dependsOn: 'war', type:Exec) {
  workingDir "${glassfishHome}${File.separator}bin"
 
  if (System.properties['os.name'].toLowerCase().contains('windows')) {
    commandLine 'cmd', '/c', 'asadmin.bat'
  } else {
    commandLine "./asadmin"
  }
 
  args "start-domain"
}

/*
http://www.gradle.org/docs/current/userguide/war_plugin.html

dependencies {
    compile module(":compile:1.0") {
        dependency ":compile-transitive-1.0@jar"
        dependency ":providedCompile-transitive:1.0@jar"
    }
    providedCompile "javax.servlet:servlet-api:2.5"
    providedCompile module(":providedCompile:1.0") {
        dependency ":providedCompile-transitive:1.0@jar"
    }
    runtime ":runtime:1.0"
    providedRuntime ":providedRuntime:1.0@jar"
    testCompile "junit:junit:4.11"
    moreLibs ":otherLib:1.0"
}

war {
    from 'src/rootContent' // adds a file-set to the root of the archive
    webInf { from 'src/additionalWebInf' } // adds a file-set to the WEB-INF dir.
    classpath fileTree('additionalLibs') // adds a file-set to the WEB-INF/lib dir.
    classpath configurations.moreLibs // adds a configuration to the WEB-INF/lib dir.
    webXml = file('src/someWeb.xml') // copies a file to WEB-INF/web.xml
}
*/